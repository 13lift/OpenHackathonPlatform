# Generated by Django 2.0.13 on 2019-04-09 09:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('profiles', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Hackathon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('url', models.URLField(max_length=150)),
                ('startDate', models.DateTimeField()),
                ('endDate', models.DateTimeField()),
                ('address', models.CharField(max_length=32)),
                ('info', models.CharField(max_length=32)),
                ('program', models.TextField()),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='')),
                ('slug', models.SlugField(max_length=20)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='profiles.City')),
            ],
        ),
        migrations.CreateModel(
            name='Hacker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skils', models.CharField(max_length=32)),
                ('rating', models.PositiveIntegerField()),
                ('github', models.URLField()),
                ('slug', models.SlugField(max_length=20)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='profiles.City')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Nomination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('info', models.CharField(blank=True, max_length=32)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('prize', models.PositiveSmallIntegerField(blank=True)),
                ('hackathon', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='hack.Hackathon')),
            ],
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('info', models.CharField(max_length=32)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='')),
                ('url', models.URLField()),
                ('slug', models.SlugField(max_length=20)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='profiles.City')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('info', models.CharField(max_length=32)),
                ('description', models.TextField()),
                ('url', models.URLField()),
                ('image', models.ImageField(upload_to='')),
                ('slug', models.SlugField(max_length=20)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('info', models.CharField(max_length=255)),
                ('github', models.URLField()),
                ('presentation', models.FileField(upload_to='')),
                ('image', models.ImageField(upload_to='')),
                ('status', models.SmallIntegerField(choices=[(0, 'Team NOT ready'), (1, 'Team ready!'), (-1, 'excluded')], db_index=True, default=0, verbose_name='Статус команды')),
                ('progress', models.PositiveSmallIntegerField()),
                ('rating', models.PositiveIntegerField()),
                ('slug', models.SlugField(max_length=20)),
                ('leader', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='leader', to='hack.Hacker')),
                ('members', models.ManyToManyField(to='hack.Hacker')),
            ],
        ),
        migrations.AddField(
            model_name='nomination',
            name='sponsor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='hack.Sponsor'),
        ),
        migrations.AddField(
            model_name='nomination',
            name='teams',
            field=models.ManyToManyField(blank=True, to='hack.Team'),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='organizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='hack.Organizer'),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='sponsor',
            field=models.ManyToManyField(to='hack.Sponsor'),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
    ]
